{
  "sketches": [
    {
      "sketchName": "For_Haruki_Audio",
      "sketchCode": "let credits = {\n\t\"student_names\": \"Tanja HÃ¤felfinger, Adelia Imobersteg\",\n\t\"recode_artist\": \"Haruki Tsuchiya\",\n\t\"recode_title\": \"March of Polygons\",\n\t\"recode_year\": 1968\n}\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tsetupAudio();\n}\n\nfunction draw() {\n\tupdateAudio();\n\trandomSeed(23);\n\tstrokeWeight(0.5);\n\tbackground(255, 10);\n\tstroke(0);\n\tnoFill();\n\n\tlc1 = 16\n\tlc2 = 10\n\n\tfor(let k = 0; k < lc1; k++) {\n\t\tlet kx = map(k, 0, lc1 - 1, 0, width)\n\n\t\tfor(let k2 = 0; k2 < lc2; k2++) {\n\t\t\tlet ky = map(k2, 0, lc2 - 1, 0, width)\n\n\t\t\tlet ft = fft[floor(map(k2, 0, lc2 - 1, 0, fft.length))];\n\t\t\tlet wf = fft[floor(map(k2, 0, lc2 - 1, 0, waveform.length))];\n\n\t\t\tpush();\n\t\t\ttranslate(kx, ky);\n\n\t\t\tlet d = dist(width / 2, height / 2, kx, ky);\n\t\t\tlet dist2 = map(d + ft / 1000, 0, width / 2, 0, 15) \n\n\t\t\trotate(radians(ampEase / 2));\n\n\t\t\trandomRec(0, 0, dist2, height / 20 * ampEase / 20);\n\t\t\tpop();\n\t\t\tmouseMapx = map(mouseX, 0, width, 0, 255);\n\t\t\tmouseMapy = map(mouseY, 0, width, 0, 255);\n\t\t\tif(ampEase > 120) {\n\t\t\t\tfill(mouseMapy, mouseMapx, random(255), 20)\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nfunction randomRec(posX, posY, numEdges, radius) {\n\tbeginShape()\n\tfor(var j = 0; j < numEdges; j++) {\n\t\tlet ft2 = fft[floor(map(j, 0, numEdges - 1, 0, fft.length))];\n\t\tvar angle = 360 / numEdges\n\t\tvar r = radius * random(1 * ft2 / 200);\n\t\tif(amp < 10) {\n\t\t\tvar x = r + random(23) * cos(j * radians(angle));\n\t\t\tvar y = r + random(23) * sin(j * radians(angle));\n\t\t} else {\n\t\t\tvar x = r * cos(j * radians(angle));\n\t\t\tvar y = r * sin(j * radians(angle));\n\t\t}\n\t\tvertex(x, y);\n\t}\n\tendShape(CLOSE);\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft, waveform, amp = 0.0,\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}
