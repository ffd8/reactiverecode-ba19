{
  "sketches": [
    {
      "sketchName": "final project celine",
      "sketchCode": "let credits = {\n\t\"student_names\": \"Céline Wassmer, Cian Jochem\",\n\t\"recode_artist\": \"Anton Zöttl\",\n\t\"recode_title\": \"Colour Composition\",\n\t\"recode_year\": 1972\n}\nlet fromColor;\nlet tooColor;\nlet inBetweenColor;\nlet scaledVal;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tangleMode(DEGREES);\n\tsetupAudio();\n\tfromColor = color(255, 204, 251);\n\ttooColor = color(204, 236, 255);\n\tscaledVal = 0;\n}\n\nfunction draw() {\n\tupdateAudio();\n\tnoStroke();\n\tscaledVal = map(mouseX, 0, width, 0, 1);\n\trcol = lerpColor(fromColor, tooColor, scaledVal);\n\tbackground(rcol);\n\tnoFill();\n\tstrokeWeight(1.5);\n\n\t//blue roses moving to fft\n\tnoiseSeed(23);\n\tstroke(0, 80, 160);\n\tblueRose(width / 3.1, height / 4.5, .02, .008, 450, 80, 400, 0, 0, 0, 0, 0, 0, 0, 85, -180, 180);\n\tnoiseSeed(22);\n\tblueRose(width / 3.5, height / 1.15, .03, .03, 400, 190, 157, 0, 0, 5, 0, 20, 0, 85, 170, -100, 100);\n\tnoiseSeed(12);\n\tblueRose(width / 1.55, height / 2.1, .008, .008, 1400, 1200, 250, 10, 5, 20, 0, 0, -30, 170, 255, 180, -180);\n\n\t//violet roses moving to amp/ampEase\n\tstroke(77, 57, 155);\n\tnoiseSeed(14);\n\tvioletRose(width / 2.85, height / 3, .01, .01, 700, 350, 245, -10, 0, 0, 0, 0, -120, 120, -120);\n\tnoiseSeed(21);\n\tvioletRose(width / 1.45, height / 1.3, .03, .03, 700, 300, 350, -15, 0, -20, 0, 20, 30, -50, 50);\n\n\t//red roses moving to waveform\n\tstroke(255, 0, 0);\n\tnoiseSeed(53);\n\tredRose(width / 3 * 2, height / 4, .025, .008, 600, 450, 220, 0, 0, 0, 0, -40, -50, -70, 70);\n\tnoiseSeed(76);\n\tredRose(width / 3.5, width / 2.7, .008, 0, 450, 120, 400, 0, 0, 0, 0, 0, 0, 180, -180);\n\tnoiseSeed(20);\n\tredRose(width / 1.65, width / 2.5, .04, .03, 450, 150, 275, 0, 0, 0, 0, 0, 0, 70, -70);\n}\n\nfunction redRose(Xpos, Ypos, nValA, nValI, rA, rI, lc, rotSinA, rotCosA, rotSinI, rotCosI, circlePosX, circlePosY, rotateMin, rotateMax) {\n\tpush();\n\ttranslate(Xpos, Ypos);\n\trotate(map(mouseY, 0, height, rotateMin, rotateMax));\n\tbeginShape(LINES);\n\tfor(let i = 0; i < lc; i++) {\n\t\tlet angle = 360 / lc;\n\t\tlet wf = waveform[floor(map(i, 0, lc - 1, 0, waveform.length))]; // -1, 1\n\t\tlet wf2 = map(wf, -1, 1, 0, 2.1);\n\t\tlet r = noise(i * nValA) * rA * wf2;\n\t\tlet x = r * cos(i * angle + rotSinA);\n\t\tlet y = r * sin(i * angle + rotCosA);\n\t\tvertex(x, y);\n\t\tr = noise(i * nValI) * rI * wf2;\n\t\tx = r * cos(i * angle + rotSinI);\n\t\ty = r * sin(i * angle + rotCosI);\n\t\tvertex(x + circlePosX, y + circlePosY);\n\t}\n\tendShape();\n\tpop();\n}\n\nfunction blueRose(Xpos, Ypos, nValA, nValI, rA, rI, lc, rotSinA, rotCosA, rotSinI, rotCosI, circlePosX, circlePosY, fftMin, fftMax, rotateMin, rotateMax) {\n\tpush();\n\ttranslate(Xpos, Ypos);\n\trotate(map(mouseY, 0, height, rotateMin, rotateMax));\n\tbeginShape(LINES);\n\tfor(let i = 0; i < lc; i++) {\n\t\tlet angle = 360 / lc;\n\t\tlet ft = fft[floor(map(i, 0, lc - 1, 0, fft.length))];\n\t\tlet ft2 = map(ft, fftMin, fftMax, 0, 1.5);\n\t\tlet r = noise(i * nValA + ft2) * rA;\n\t\tlet x = r * cos(i * angle + rotSinA);\n\t\tlet y = r * sin(i * angle + rotCosA);\n\t\tvertex(x, y);\n\t\tr = noise(i * nValI + ft2) * rI;\n\t\tx = r * cos(i * angle + rotSinI);\n\t\ty = r * sin(i * angle + rotCosI);\n\t\tvertex(x + circlePosX, y + circlePosY);\n\t}\n\tendShape();\n\tpop();\n}\n\nfunction violetRose(Xpos, Ypos, nValA, nValI, rA, rI, lc, rotSinA, rotCosA, rotSinI, rotCosI, circlePosX, circlePosY, rotateMin, rotateMax) {\n\tpush();\n\ttranslate(Xpos, Ypos);\n\trotate(map(mouseY, 0, height, rotateMin, rotateMax));\n\tbeginShape(LINES);\n\tfor(let i = 0; i < lc; i++) {\n\t\tlet angle = 360 / lc;\n\t\tlet r = noise(i * nValA) * rA + amp * .9;\n\t\tlet x = r * cos(i * angle + rotSinA);\n\t\tlet y = r * sin(i * angle + rotCosA);\n\t\tvertex(x, y);\n\t\tr = noise(i * nValI) * rI + ampEase * .6;\n\t\tx = r * cos(i * angle + rotSinI);\n\t\ty = r * sin(i * angle + rotCosI);\n\t\tvertex(x + circlePosX, y + circlePosY);\n\t}\n\tendShape();\n\tpop();\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft, waveform, amp = 0.0,\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}
