{
  "sketches": [
    {
      "sketchName": "final_semaya.soraya",
      "sketchCode": " let credits = { \n    \"student_names\": \"semaya mehret, soraya koefer\", \n    \"recode_artist\": \"josef albers\", \n    \"recode_title\": \"structural constellation\", \n    \"recode_year\": 1955 \n} \n\n\n//koordinatenSystem=von0-1000 (.1=100,.01=10,.9=900,.15=150)\n//immer . vor zahl\n//width=1000 (ganze bildschirmbreite)\n//height=1000 (ganze bildschirmhöhe)\n//height/2=mitte des bildschirms in der höhe\n//width/2=mitte des bildschirms in der breite\n//grün=hilfslinien\n\n\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tbackground(253, 244, 235);\n\tsetupAudio();\n}\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tbackground(253, 244, 235);\n\tupdateAudio();\n\t\n\tstrokeWeight(2) //linie oben stehen lassen\n\tstroke(0)\n\tline(width*.15,height*.11,width*.85,height*.11);\n\t\n\tstrokeWeight(2) //linie unten stehen lassen\n\tstroke(0)\n\tline(width*.15,height*.89,width*.85,height*.89);\n\t\n\tbeginShape();//box oben links dick\n\t\tstroke(0);\n\t\tnoFill();\n\t\tstrokeWeight(3);\n\t\tvertex(width*.42,height*.135);\n\t\tvertex(width*.25,height*.24);\n\t\tvertex(width/2,height*.38);\n\t\tvertex(width*.42,height*.7);\n\t\tvertex(width*.16,height*.57)\n\tendShape();\n\nbeginShape();//box oben links dünn\n\t\tstroke(0);\n\t\tnoFill();\n\t\tstrokeWeight(1);\n\t\tlet vOL1= createVector(width*.42, height*.135);\n\t\tlet vOL2=createVector(width*.34, height*.46);\n\t\tfor(let i=0;i<waveform.length/2;i++){\n\t\t\tlet vTemp=p5.Vector.lerp(vOL1,vOL2,map(i, 0, waveform.length/2, 0, 1));\n\t\t\tlet audioWave=waveform[i]*5;\n\t\t\tvertex(vTemp.x+audioWave*8,vTemp.y);\n\t\t}\n\t\tlet vOL3=createVector(width*.16,height*.57);\n\t\tfor(let i=waveform.length/2;i<waveform.length;i++){\n\t\t\tlet vTemp=p5.Vector.lerp(vOL2,vOL3,map(i, waveform.length/2, waveform.length-1, 0, 1));\n\t\t\tlet audioWave=waveform[i]*10;\n\t\t\tvertex(vTemp.x+audioWave*4,vTemp.y);\n\t\t}\n\n\t\t//vertex(width*.16,height*.57);\nendShape();\n\nbeginShape();//platte mitte links dünn\n\t\tstroke(0);\n\t\tnoFill();\n\t\tstrokeWeight(1);\n\t\tlet vMOL1= createVector(width/2,height*.38);\n\t\tlet vMOL2=createVector(width*.42,height*.42);\n\t\tfor (let i=0;i<waveform.length;i++){\n\t\t\tlet vTemp=p5.Vector.lerp(vMOL1,vMOL2,map(i, 0, waveform.length-1, 0, 1));\n\t\t\tlet audioWave=waveform[i]*2;\n\t\t\tvertex(vTemp.x+audioWave*4,vTemp.y);\n\t\t}\n\t\tlet vMOL3=createVector(width*.34,height*.75);\n\t\tfor (let i=0;i<waveform.length;i++){\n\t\t\tlet vTemp=p5.Vector.lerp(vMOL2,vMOL3,map(i, 0, waveform.length-1, 0, 1));\n\t\t\tlet audioWave=waveform[i]*2;\n\t\t\tvertex(vTemp.x+audioWave*3,vTemp.y);\n\t\t}\nendShape();\n\nbeginShape();//platte mitte mitte unten dick\n\t\tstroke(0);\n\t\tnoFill();\n\t\tstrokeWeight(3);\n\t\tvertex(width*.34,height*.75);\n\t\tvertex(width/2,height*.65);\nendShape();\nbeginShape();//platte mitte mitte oben dick\n\t\tstroke(0);\n\t\tstrokeWeight(3);\n\t\tnoFill();\n\t\tvertex(width/2,height*.38);\n\t\tvertex(width*.66,height*.28);\nendShape();\n\nbeginShape();//box unten rechts dick\n\t\tstroke(3);\n\t\tnoFill();\n\t\tvertex(width*.84,height*.46)\n\t\tvertex(width*.58,height*.33)\n\t\tvertex(width/2, height*.65);\n\t\tvertex(width*.75, height*.79);\n\t\tvertex(width*.58, height*.87);\n\t\nendShape();\n\nbeginShape();//platte mitte rechts dünn\n\t\tstroke(0);\n\t\tnoFill();\n\t\tstrokeWeight(1);\n\t\tlet vMR1 = createVector(width*.66,height*.28)\n\t\tlet vMR2= createVector(width*.58, height*.60);\n\t\tfor (let i=0; i < waveform.length; i++){\n\t\t\tlet vTemp=p5.Vector.lerp(vMR1,vMR2,map(i, 0, waveform.length-1, 0, 1));\n\t\t\tlet audioWave=waveform[i]*2;\n\t\t\tvertex(vTemp.x+audioWave*4,vTemp.y);\n\t\t}\n\t\tlet vMR3=createVector(width/2, height*.65);\n\t\tfor (let i=0; i < waveform.length; i++){\n\t\t\tlet vTemp=p5.Vector.lerp(vMR2,vMR3,map(i, 0, waveform.length-1, 0, 1));\n\t\t\tlet audioWave=waveform[i]*2;\n\t\t\tvertex(vTemp.x+audioWave*3,vTemp.y);\n\t\t}\nendShape();\n\nbeginShape();//box unten rechts dünn\n\t\tstroke(0);\n\t\tnoFill();\n\t\tstrokeWeight(1);\n\t\t\n\t\tlet vUR1 = createVector(width*.84,height*.46)\n\t\tvertex(vUR1.x, vUR1.y);\n\t\t\n\t\tlet vUR2 = createVector(width*.66,height*.55)\n\t\t// lerp here\n\t\t//waveform\n\t\tfor(let i=0; i < waveform.length; i++){\n\t\t\tlet vTemp = p5.Vector.lerp(vUR1, vUR2, map(i, 0, waveform.length-1, 0, 1));\n\t\t\tlet audioWave = waveform[i]*5;\n\t\t\tvertex(vTemp.x+audioWave*8, vTemp.y)\n\t\t}\n\t\tlet vUR3=createVector(width*.58, height*.87);\n\t\tfor(let i=0; i < waveform.length; i++){\n\t\t\tlet vTemp = p5.Vector.lerp(vUR2, vUR3, map(i, 0, waveform.length-1, 0, 1));\n\t\t\tlet audioWave = waveform[i]*10;\n\t\t\tvertex(vTemp.x+audioWave*4, vTemp.y)\n\t\t}\n\t\t/*\n\t\t// fft\n\t\tfor(let i=0; i < fft.length; i++){\n\t\t\tlet v3 = p5.Vector.lerp(v1, v2, map(i, 0, fft.length-1, 0, 1));\n\t\t\tlet audioWave = fft[i];\n\t\t\tvertex(v3.x, v3.y+audioWave)\n\t\t}\n\t\t*/\nendShape();\n\n\n\n\n\n\n\n}\n\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft, waveform, amp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}