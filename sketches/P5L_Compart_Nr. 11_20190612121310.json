{
  "sketches": [
    {
      "sketchName": "Compart Nr. 112",
      "sketchCode": "let credits = { \n    \"student_names\": \"Max Keller, Oliver Jauslin, Audrey Rappold\", \n    \"recode_artist\": \"Peter Kreis\", \n    \"recode_title\": \"Compart Nr. 11\", \n    \"recode_year\": 1970 \n} \nlet cols, rows;\nlet flying = 0;\nlet terrain;\nlet scl = 20;\n\n\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight, WEBGL);\n\tcols = 31;\n\trows = 31;\n\n\tterrain = [];\n\tfor(let x = 0; x < cols; x++) {\n\t\tterrain[x] = [];\n\t};\n\t\n\t//pixelDensity(1);    \n\tangleMode(DEGREES);\n\trectMode(CENTER);\n\tfill(255, 200, 0);\n\tstroke(100);\n\tstrokeWeight(0.5);\n\n\tsetupAudio();\n};\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tupdateAudio();\n\torbitControl(3);\n\tbackground(30, 15, 20);\n\n\t//lights();\n\n\trotateX(80);\n\trotateZ(55);\n\n\trotateZ(frameCount * .1);\n\n\t\n\tlet speed = 0.02 + (amp * 0.001);\n\n\tlet ampheight = 25 - (ampEase * .3);\n\n\n\ttranslate(0, 0, ampEase * .2);\n\n\tfor(let y = 0; y < rows - 1; y++) {\n\t\tbeginShape(TRIANGLE_STRIP);\n\t\tfor(let x = 0; x < cols; x++) {\n\t\t\tpush();\n\t\t\ttranslate(x * scl, y * scl, terrain[x][y]);\n\t\t\tvertex(x * scl - 300, y * scl - 300, terrain[x][y]);\n\t\t\tvertex(x * scl - 300, (y + 1) * scl - 300, terrain[x][y + 1]);\n\t\t\tpop();\n\t\t};\n\t\tendShape();\n\t};\n\n\tflying -= speed;\n\tlet yoff = flying;\n\tfor(let y = 0; y < rows; y++) {\n\t\tlet xoff = 0;\n\t\tfor(let x = 0; x < cols; x++) {\n\t\t\tif(dist(15, 15, 0, x, y, 0) >= 15) {\n\t\t\t\tlet freq = map(fft[x], 0, fft.length, 0, cols);\n\t\t\t\tterrain[x][y] = map(noise(xoff, yoff) * (100 + fft[x]) * .01, 0, 1, 0, ampheight);\n\t\t\t\t//terrain[x][y] = map(freq, 0, fft.length, 0, ampheight*2);\n\t\t\t\txoff += -0.2;\n\t\t\t}\n\t\t\tif(dist(15, 15, 0, x, y, 0) < 15) {\n\t\t\t\tterrain[x][y] = map(fft[x], 0, fft.length, 0, -ampheight * .2);\n\t\t\t\txoff += -0.2;\n\t\t\t}\n\t\t};\n\t\tyoff += -0.2;\n\t};\n\n};\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft, waveform, amp = 0.0,\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average amplitude\n\tampEase = ease(amp, ampEase, 0.3); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}
