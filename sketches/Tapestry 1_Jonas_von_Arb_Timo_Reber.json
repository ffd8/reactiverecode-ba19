{
  "sketches": [
    {
      "sketchName": "06.02_QR_20190612120741",
      "sketchCode": "let credits = {\n\t\"student_names\": \"Jonas von Arb, Timo Reber\",\n\t\"recode_artist\": \"Kenneth Knowlton\",\n\t\"recode_title\": \"Tapestry 1\",\n\t\"recode_year\": 1961\n}\n\nlet fb, layer;\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tframeCount = 0;\n\trectMode(CENTER)\n\timageMode(CENTER)\n\tstrokeWeight(10)\n\tfb = createImage(width, height)\n\tsb = createImage(width, height)\n\tnoSmooth();\n\tlayer = createGraphics(width, height);\n\tlayer.clear(0)\n\tlayer.fill(255)\n\tlayer.stroke(0)\n\tlayer.strokeWeight(20)\n\n\tsetupAudio();\n}\n\nfunction draw() {\n\tupdateAudio();\n\tlet x = width - frameCount * 3 % width;\n\tlet y = height / 5 + abs(sin(-frameCount * 0.02)) * -ampEase * 1;\n\n\tlet a = frameCount * 4 % width;\n\tlet b = height / 2 + abs(sin(frameCount * 0.02)) * ampEase * 2;\n\n\tlet c = frameCount * 4 % width / 2;\n\tlet d = -height / 5 + abs(sin(frameCount * 0.02)) * ampEase * 4;\n\n\tlet e = width - frameCount * 3 % width / 2;\n\tlet f = -height / 5 + abs(sin(frameCount * 0.02)) * ampEase * 3;\n\n\tlet g = frameCount * 4 % width / 2;\n\tlet h = height / 6 + abs(sin(frameCount * 0.02)) * ampEase * 5;\n\n\tlet i = frameCount * 1 % width / 2;\n\tlet j = height / 6 + abs(sin(frameCount * 0.02)) * ampEase * 2;\n\n\tlet k = width - frameCount * 7 % width / 2;\n\tlet l = height / 4 + sin(frameCount * 0.02) * ampEase * 8;\n\n\tscl = 1.5; //map(mouseX, 0, width, .99, 1.1);\n\tlayer.image(fb, width / 2, height / 2, fb.width * scl, fb.height * scl)\n\timage(layer, frameCount * 2 % width, ampEase * 3)\n\timage(layer, frameCount * 5 % width, ampEase * 1)\n\n\tfb = get(x, y, 100, 100)\n\n\tif(frameCount < 30) {\n\t\timage(fb, x, y)\n\t}\n\n\tfill(0, 0, 0);\n\tstroke(255);\n\tstrokeWeight(20);\n\trect(x, y, 150, 150);\n\trect(x, y, 60, 60);\n\n\tfill(0, 0, 0);\n\tstroke(255);\n\tstrokeWeight(20);\n\trect(a, b, 150, 150);\n\trect(a, b, 60, 60);\n\n\tfill(0, 0, 0);\n\tstroke(255);\n\tstrokeWeight(20);\n\trect(c, d, 150, 150);\n\trect(c, d, 60, 60);\n\n\tfill(0, 0, 0);\n\tstroke(255);\n\tstrokeWeight(20);\n\trect(e, f, 150, 150);\n\trect(e, f, 60, 60);\n\n\tfill(0, 0, 0);\n\tstroke(0);\n\tstrokeWeight(20);\n\trect(g, h, 50, 50);\n\n\tfill(255);\n\tstroke(255);\n\tstrokeWeight(20);\n\trect(i, j, 50, 50);\n\n\tfill(0, 0, 0);\n\tstroke(0);\n\tstrokeWeight(20);\n\trect(k, l, 50, 50);\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft, waveform, amp = 0.0,\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}
