{
  "sketches": [
    {
      "sketchName": "le_circle_003",
      "sketchCode": "// please reload twice :)\n\nlet credits = {\n\t\"student_names\": \"Hanna Broman, Monika von der Crone\",\n\t\"recode_artist\": \"Leigh Hendricks\",\n\t\"recode_title\": \"Variations on a theme from Bridget Riley\",\n\t\"recode_year\": 1960\n}\n\nlet paused = false;\nvar pieces = 80;\nvar radius = 200;\nvar radius2 = radius * 1.5\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight, WEBGL);\n\tangleMode(DEGREES)\n\tsetupAudio();\n}\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\n\tif(!paused) {\n\t\tupdateAudio();\n\t}\n\n\tbackground(255)\n\n\t//let pieces =100-ampEase%150;\n\n\tlet x1 = width / 2;\n\tlet y1 = height / 2;\n\tlet x2 = mouseX;\n\tlet y2 = mouseY;\n\t\n\t//first ellipse        \n\tif(keyIsPressed === true) {\n\t\tstrokeWeight(3)\n\t} else {\n\t\tstrokeWeight(1.5)\n\t}\n\n\tif((dist(x1, y1, x2, y2) < radius * 1.5 + 80 && dist(x1, y1, x2, y2) > radius * 1.5 && mouseIsPressed)) {\n\t\tnoFill()\n\t\tpush()\n\t\tnoStroke();\n\t\trotate(0)\n\n\t\tellipse(0, 0, radius)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(-309, radius, -60, radius * 1.5);\n\t\t}\n\t\tpop()\n\t\t} \n\telse {\n\t\tnoFill()\n\t\tpush()\n\t\ttranslate(ampEase * 1 % width, ampEase * 1 % height)\n\t\tnoStroke();\n\t\tellipse(0, 0, radius)\n\t\trotate(frameCount * 0.1)\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(-319, radius, -60, radius * 1.5);\n\t\t\trotateZ(-frameCount * 0.01)\n\t\t}\n\t\tpop()\n\t}\n\n\n\t//second ellipse\n\n\tif((dist(x2, y2, x1, y1) < radius * 1.5 && dist(x1, y1, x2, y2) > radius * 1.25 && mouseIsPressed)) {\n\t\tpush()\n\t\tnoStroke();\n\t\tellipse(0, 0, radius)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(-150, radius * 2 / 2, 0, radius * 1.5);\n\t\t}\n\t\tpop()\n\t} \n\telse {\n\t\tpush()\n\t\ttranslate(-ampEase * 1 % width, -ampEase * 0.8 % height)\n\t\tnoStroke();\n\t\tellipse(0, 0, radius)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(-150, radius * 2 / 2, 0, radius * 1.5);\n\t\t\trotateZ(-frameCount * 0.01)\n\t\t}\n\t\tpop()\n\t}\n\n\t//third ellipse\n\n\tif((dist(x2, y2, x1, y1) < radius * 1.25 && dist(x1, y1, x2, y2) > radius * .5 + 80 && mouseIsPressed)) {\n\t\tnoStroke();\n\t\tpush();\n\t\tellipse(0, 0, radius)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(150, radius / 2, 0, radius * 1.25);\n\t\t}\n\t\tpop();\n\t} \n\telse {\n\t\tnoStroke();\n\t\tpush();\n\t\ttranslate(-ampEase * 3 % width, ampEase * 1 % height)\n\t\tellipse(0, 0, radius)\n\t\trotate(-frameCount * 0.1)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(150, radius / 2, 0, radius * 1.25);\n\t\t\trotateZ(-frameCount * 0.01)\n\t\t}\n\t\tpop();\n\t}\n\n\t//fourth ellipse\n\n\tif((dist(x2, y2, x1, y1) < radius * .5 + 80 && dist(x1, y1, x2, y2) > radius * .5 && mouseIsPressed)) {\n\t\tpush()\n\t\tnoStroke();\n\t\tellipse(0, 0, radius)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(145, radius / 2, 0, radius * .5);\n\t\t}\n\t\tpop()\n\t} \n\telse {\n\t\tpush()\n\t\ttranslate(-ampEase * 1 % width, -ampEase * 3 % height)\n\t\tnoStroke();\n\t\tellipse(0, 0, radius)\n\t\trotate(frameCount * 0.1)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(145, radius / 2, 0, radius * .5);\n\t\t\trotateZ(-frameCount * 0.01)\n\t\t}\n\t\tpop()\n\t}\n\n\t//fifth ellipse\n\n\tif((dist(x2, y2, x1, y1) < radius - 100 && mouseIsPressed)) {\n\t\tpush()\n\t\tnoStroke();\n\t\tellipse(0, 0, radius)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\n\t\t\tline(-20, radius / 2, 100-map(mouseX,0,width/2, 0, 100), radius * .001);\n\t\t}\n\t\tpop()\n\t} \n\telse {\n\t\t\n\t\tpush()\n\t\ttranslate(0, ampEase * 0.5 % height)\n\t\tnoStroke();\n\t\tellipse(0, 0, radius)\n\t\trotate(-frameCount * 0.1)\n\n\t\tfor(let i = 0; i < pieces; i++) {\n\t\t\trotate(360 / pieces);\n\t\t\tstroke(0)\n\t\t\tline(-20, radius / 2, 100-map(mouseX,0,width/2, 0, 100), radius * .001);\n\t\t\trotateZ(-frameCount * 0.01)\n\t\t}\n\t\tpop()\n\t}\n}\n\nfunction mousePressed() {\n\tpaused = !paused;\n\tprint(paused)\n}\n\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}