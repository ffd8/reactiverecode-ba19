{
  "sketches": [
    {
      "sketchName": "ManfredMohr_P-200/201CB2_gianna&lisa",
      "sketchCode": "let credits = { \n    \"student_names\": \"lisa strub, gianna heim\", \n    \"recode_artist\": \"manfred mohr\", \n    \"recode_title\": \"P-200/201 CB2\", \n    \"recode_year\": 1977 \n} \n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\tangleMode(DEGREES);\n\tsetupAudio();\n}\n\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tupdateAudio();\n\n\tbackground(255);\n\tstrokeWeight(7+ampEase*.35);\n\tstrokeCap(SQUARE);\n\tnoSmooth();\n\tstroke(0, map(mouseY, 0, height, 0, 255), mouseY);\n\ttranslate(width/2, height/2);\n\tscale(1+mouseX*.0005);\n\ttranslate(-width/2, -height/2);\n\tif(ampEase > 45){\n\t\tstroke(255, map(mouseY, 0, height, 255, 0), 255);\n\t\tbackground(0);\n\t}\n\t\n\tlet big = ampEase*.003+1\n\tline(width * .155, -4, width * .12*(-ampEase*.001+1), height * .5*big); //1 obere box \n\tline(-4, -4, width * .52*big, height * .19*big); //2\n\tline(width * .5*(-ampEase*.0003+1), height * .5*big, width * .52, height * .19); //3\n\tline(width * .52*(-ampEase*.001+1), height * .19*big, width * .66*(ampEase*.001+1), height * .08*big); //4\n\tline(width * .66*(ampEase*.001+1), height * .08*big, width * .41, -4); //5\n\n\tline(width * .12*big, height * .67*(-ampEase*.0003+1), -4, height * .74); //1 untere box \n\tline(width * .12*big, height * .67*(ampEase*.003+1), width*.15*(ampEase*.003+1), height * .5*big); //2\n\tline(width * .47*(ampEase*.001+1), height * .5*big, width * .375, height+4); //3\n\tline(width * .12*big, height * .67*(-ampEase*.0007+1), width * .56, height+4); //4\n\tline(-4, height * .87, width * .15, height+4); //5\n\t\n\t\n\tif(amp>30){\n\t\ttranslate(100,100);\n\t\tline(width * .155, -4, width * .12*(-ampEase*.001+1), height * .5*big); //1 obere box \n\t\tline(-4, -4, width * .52*big, height * .19*big); //2\n\t\tline(width * .5*(-ampEase*.0003+1), height * .5*big, width * .52, height * .19); //3\n\t\tline(width * .52*(-ampEase*.001+1), height * .19*big, width * .66*(ampEase*.001+1), height * .08*big); //4\n\t\tline(width * .66*(ampEase*.001+1), height * .08*big, width * .41, -4); //5\n\n\t\tline(width * .12*big, height * .67*(-ampEase*.0003+1), -4, height * .74); //1 untere box \n\t\tline(width * .12*big, height * .67*(ampEase*.003+1), width*.15*(ampEase*.003+1), height * .5*big); //2\n\t\tline(width * .47*(ampEase*.001+1), height * .5*big, width * .375, height+4); //3\n\t\tline(width * .12*big, height * .67*(-ampEase*.0007+1), width * .56, height+4); //4\n\t\tline(-4, height * .87, width * .15, height+4); //5\n\t}\n\t\n\t\n\tif(amp>30){\n\t\ttranslate(200,200);\n\t\tline(width * .155, -4, width * .12*(-ampEase*.001+1), height * .5*big); //1 obere box \n\t\tline(-4, -4, width * .52*big, height * .19*big); //2\n\t\tline(width * .5*(-ampEase*.0003+1), height * .5*big, width * .52, height * .19); //3\n\t\tline(width * .52*(-ampEase*.001+1), height * .19*big, width * .66*(ampEase*.001+1), height * .08*big); //4\n\t\tline(width * .66*(ampEase*.001+1), height * .08*big, width * .41, -4); //5\n\n\t\tline(width * .12*big, height * .67*(-ampEase*.0003+1), -4, height * .74); //1 untere box \n\t\tline(width * .12*big, height * .67*(ampEase*.003+1), width*.15*(ampEase*.003+1), height * .5*big); //2\n\t\tline(width * .47*(ampEase*.001+1), height * .5*big, width * .375, height+4); //3\n\t\tline(width * .12*big, height * .67*(-ampEase*.0007+1), width * .56, height+4); //4\n\t\tline(-4, height * .87, width * .15, height+4); //5\n\t}\n\t\t\n\t\n\tif(amp>20){\n\t\ttranslate(300,300);\n\t\tline(width * .155, -4, width * .12*(-ampEase*.001+1), height * .5*big); //1 obere box \n\t\tline(-4, -4, width * .52*big, height * .19*big); //2\n\t\tline(width * .5*(-ampEase*.0003+1), height * .5*big, width * .52, height * .19); //3\n\t\tline(width * .52*(-ampEase*.001+1), height * .19*big, width * .66*(ampEase*.001+1), height * .08*big); //4\n\t\tline(width * .66*(ampEase*.001+1), height * .08*big, width * .41, -4); //5\n\n\t\tline(width * .12*big, height * .67*(-ampEase*.0003+1), -4, height * .74); //1 untere box \n\t\tline(width * .12*big, height * .67*(ampEase*.003+1), width*.15*(ampEase*.003+1), height * .5*big); //2\n\t\tline(width * .47*(ampEase*.001+1), height * .5*big, width * .375, height+4); //3\n\t\tline(width * .12*big, height * .67*(-ampEase*.0007+1), width * .56, height+4); //4\n\t\tline(-4, height * .87, width * .15, height+4); //5\n\t}\n\t\/\/println(amp)\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft, waveform, amp = 0.0,\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average amplitude\n\tampEase = ease(amp, ampEase, 0.3); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n} "
    }
  ]
}
