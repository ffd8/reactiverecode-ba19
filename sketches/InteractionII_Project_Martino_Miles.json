{
  "sketches": [
    {
      "sketchName": "InteractionII_Project_Martino_Miles",
      "sketchCode": "\nlet credits = { \n    \"student_names\": \"Martino Beretta, Miles BÃ¶gli\", \n    \"recode_artist\": \"Frieder Nake\", \n    \"recode_title\": \"felder von rechteckschraffuren\", \n    \"recode_year\": 1964 \n} \nlet b = 50\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\n\tsetupAudio();\n}\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tupdateAudio();\n\trandomSeed(0)\n\tbackground(245, 239, 230);\n\tnoFill();\n\tstrokeWeight(2.3)\n\tstroke(0);\n\n\n\t/* fft */\n\tbeginShape(LINES)\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet w = map(i, 0, fft.length, width - b, b) + random(-4, 4);\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(w, height - b-(random(0.3*freq)))\n\t\tvertex(w, freq)\n\n\t\t//line(10, height , 10, height-ampEase*100);\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //1\n\ttranslate(0, 100) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 60, 100, 10, 90, 20); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 8, l)\n\n\n\t}\n\tendShape()\n\tbeginShape(LINES) //1.1\n\ttranslate(0, 20) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 200, 10, 40, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 8, l)\n\n\n\t}\n\tendShape()\n\tbeginShape(LINES) //2\n\ttranslate(80, 250) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2.5, 45, 190, 10, 30, 90, 70); //heigth of lines.last numberheight of square\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(20, l) //lenght\n\t\tvertex(freq + width / 8, l) //lenght\n\n\n\t}\n\tendShape()\n\tbeginShape(LINES) //3\n\ttranslate(-30, 70) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2.5, 30, 190, 10, 90, 90, 270); //heigth of lines.last numberheight of square\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(40, l) //lenght\n\t\tvertex(freq + width / 20, l) //lenght\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //4\n\ttranslate(200, -170) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2.5, 30, 190, 10, 90, 90, 270); //heigth of lines.last numberheight of square\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(40, l) //lenght\n\t\tvertex(freq + width / 30, l) //lenght\n\n\n\t}\n\tendShape()\n\tbeginShape(LINES) //4.1\n\ttranslate(-55, 20) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 40, 50, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 7, l)\n\n\n\t}\n\tendShape()\n\tbeginShape(LINES) //5\n\ttranslate(0, 230) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 40, 50, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 8, l)\n\n\n\t}\n\tendShape()\n\tbeginShape(LINES) //5.1\n\ttranslate(80, 0) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 140, 10, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 7, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //6\n\ttranslate(190, -450) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 55, 120, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 7, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //6.1\n\ttranslate(0, -20) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 70, 20, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 9, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //6.2\n\ttranslate(0, 25.6) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 23, 30, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 13, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //6.3\n\ttranslate(0, 25.6) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 150, 125, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 14, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //6.4\n\ttranslate(-10, 130) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 150, 60, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 10, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //6.5\n\ttranslate(10, 140) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 150, 30, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 9, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //7\n\ttranslate(10, 30) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 50, 100, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 7, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //8\n\ttranslate(60, 150) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 25, 20, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 7, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //8.1\n\ttranslate(40, 20) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 18, 20, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 7, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //9\n\ttranslate(150, -520) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 100, 20, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 10, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //9.2\n\ttranslate(30, 20) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 45, 140, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 10, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //9.3\n\ttranslate(2, 20) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 80, 130, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 13, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //9.4\n\ttranslate(1, 10) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 80, 130, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 13, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //9.5\n\ttranslate(10, 10) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 50, 130, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 13, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //10\n\ttranslate(350, 100) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 60, 130, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 8, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //10.1\n\ttranslate(-30, -10) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 200, 70, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 11, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //10.2\n\ttranslate(25, -45) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 200, 70, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 11, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //11\n\ttranslate(-30, 405) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 200, 70, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 6, l)\n\n\n\t}\n\tendShape()\n\tbeginShape(LINES) //11.1\n\ttranslate(0, -72) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 200, 70, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 14, l)\n\n\n\t}\n\tendShape()\n\n\tbeginShape(LINES) //11.2\n\ttranslate(0, 140) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 65, 70, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 14, l)\n\n\n\t}\n\tendShape()\n\tbeginShape(LINES) //11.3\n\ttranslate(30, -10) //position\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);z\n\t\tlet l = map(i * 2, 10, 200, 70, 0, 10); //heigth of lines\n\t\t//line(x, height, w, 0);\n\t\t//line(w, height-b, w, freq);\n\n\t\tvertex(100, l)\n\t\tvertex(freq + width / 14, l)\n\n\n\t}\n\tendShape()\n\n\t/* fft */\n\tfor(let i = 0; i < fft.length; i++) {\n\t\tlet freq = fft[i]; // (0, 255);\n\t\tlet s = map(i, 0, fft.length, width, 0);\n\t\t//line(x, height, w, 0);\n\t\t//line(s, height/2, s, height/2+ampEase*10+freq);\n\n\n\t}\n\n\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft, waveform, amp = 0.0,\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 10; // average amplitude\n\tampEase = ease(amp, ampEase, 0.5); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}\n"
    }
  ]
}
